= FuelPHP + NetBeans + Gitで高速開発環境を整える @<href>{https://twitter.com/LandscapeSketch,@LandscapeSketch}


こんにちは。
FuelPHP Advent Calendar初参加のタケです。


昨日は@EGMCさんの「FuelPHP用ソーシャルログイン専用認証パッケージDsAuthでNinjAuthをもっと簡単に利用する」でした。@<br>{}


今日の私の記事はFuelPHP + NetBeans + Gitで高速で便利な開発環境を作る手順です。
画像ばかりでしかも長くなってしまいましたが、お付き合いください。

== NetBeansのダウンロード


まずは@<href>{http://ja.netbeans.org/,NetBeans公式ページ}から、NetBeans本体をダウンロードしセットアップしてください。


//image[2012-12-01_12h31_27][NetBeansのダウンロード]{
//}


セットアップはセットアップファイルをダブルクリックするだけでOK。JDKも必要になりますので、Macでは別途Oracleから入手する必要があります。

== FuelPHPを展開


FuelPHPをダウンロードし、必要な場所に展開します。


//image[2012-11-21-22_42_47][]{
//}

== NetBeansでプロジェクトの作成


NetBeansを起動します。

//image[2012-11-21-22_43_03][]{
//}


NetBeansでプロジェクトを作成します。[ファイル]→[新規プロジェクト]をポイントします。

//image[2012-11-21-22][]{
//}

//image[2012-11-21-22_43_13][]{
//}


「既存のソースを使用するPHPアプリケーション」を選択し、次へ進みます。

//image[2012-11-21-22_43_36][]{
//}


プロジェクトフォルダの選択となります。先ほど展開した「fuelphp」のフォルダを選び、開きます。

//image[2012-11-21-22_43_47][]{
//}


詳細設定が出てきます。
プロジェクト名とは、NetBeansのプロジェクトペインに表示される名前です。私は通常、アプリケーション名を付けています。

== 次に実行構成の編集です


もしFTPでサーバーにアップロードする場合はここで設定をするとラクです。
ローカルだけで動かす場合はこの段落は無視してください。


//image[2012-11-21-22_44_48][]{
//}


基本的な接続設定をします。


//image[2012-11-21-22_45_06][]{
//}


この画面で「@<strong>{手動}」を選択しておくと、ファイルごとにアップ、ダウン、同期が選べるメニュー追加され、不用意にファイルを更新してしまうリスクをなくせます。


//image[2012-11-21-23_39_36][]{
//}


ファイルを右クリックするとこのようなメニューが現れるようになります。


設定が終わりましたら[終了]を押します。

== 設定完了


設定が終わるとプロジェクトとしてペインに表示されます。


//image[2012-11-21-22_45_30][]{
//}

== プラグインの追加


さてここでまた@<strong>{寄り道}。FuelPHP用のプラグインを追加します。
このプラグインはインストールしなくても、このあとの説明には問題ありません。時間がある人だけ読んでください。


NetBeansでFuelPHPを便利に使うために、プラグインが開発されています。ただ、現状はほとんど機能が搭載されていないのですが、プロジェクトのアイコンがFuelPHPタイプに変化してうれしいので入れておきます。@<br>{}


ダウンロードはこちら　＞　@<href>{http://plugins.netbeans.org/plugin/44665/php-fuelphp-framework,http://plugins.netbeans.org/plugin/44665/php-fuelphp-framework}

プラグインはNetBeans 7.2.1が必要です。7.2以下の場合はNetBeansを更新してください。

//image[2012-11-21-22_51_11][]{
//}


バージョンが違うとインストールエラーになりますので必ずあわせてください。@<br>{}


ダウンロードすると「@<strong>{.nbm}」ファイルが保存されています。
これがNetNeansのプラグインファイルです。
NetBeansに戻り、[ツール]→[プラグイン]を開きます。


「ダウンロード済み」タブをクリックし、「プラグインの追加」ボタンをクリックします。
先ほどダウンロードした .nbm ファイルを選択し、[インストール]をクリックします。@<br>{}


正常に登録されると、


//image[2012-11-21-222][]{
//}


こんなアイコンに変わります。


@<strong>{カワイイ！}(それだけ！？)

== コード補完用ファイルを持ってくる


次にコード補完をするために、@<href>{https://twitter.com/kenji_s,@kenji_s}さんのページから補完用作ります。


こちら > @<href>{http://d.hatena.ne.jp/Kenji_s/20120123/1327301678,http://d.hatena.ne.jp/Kenji_s/20120123/1327301678}


autocomplete.phpを作り、ソース・ファイル直下に置きます。


//image[2012-11-21-22_59_31][]{
//}


中身は@<href>{https://twitter.com/kenji_s,@kenji_s}さんのページからコピーしてください。


//image[2012-11-21-22_59_41][]{
//}


このファイルを置いておくことでクラスなどのコード補完が使えます。

== 強力なコードテンプレートを使う


NetBeansにはカンタンに登録でき、非常に使える@<strong>{コードテンプレート}が搭載されています。コードテンプレートとは、よく使うコードをわずかな文字数で呼び出せる機能です。実際に使ってみましょう。


今回はFuelPHPでよく使う構文


//emlist{
return Response::forge(View::forge('hogehoge'));
//}


をテンプレートにしてみます。@<br>{}


NetBeansの[ツール]→[オプション]をポイントします。


出てきたダイアログで「エディタ」から「コードテンプレート」を開きます。


言語から「PHP」を選択します。


//image[2012-11-21-23_32_03][]{
//}


右にある[新規]ボタンをクリックします。


//image[2012-11-21-23_36_26][]{
//}


省略名とは実際にキーボードから打ち込む文字です。
すでに登録されてい名前は使えません。
今回は「@<strong>{retview}」としてみます。


//image[2012-11-21-23_38_23][]{
//}


テンプレートの編集モードになりますので、展開後のコードを書きます。


//image[2012-11-21-23_38_35][]{
//}


具体的には

//emlist{
return Response::forge(View::forge('${cursor}');
//}

と記入します。ちなみに @<strong>{${cursor}} とは、コードを展開後に「カーソルをその部分に移動しろ」というテンプレート変数です。


OKを押して全てを閉じます。@<br>{}


ではコードを使ってみます。
コントローラーのコードを開きます。
 @<strong>{retview}とだけ打って、「tabキー」をしてください。


//image[2012-11-21-23_39_06][]{
//}


//image[2012-11-21-23_39_10][]{
//}


@<strong>{ワオ！すばらしい！}


@<tt>{forge('')} の中にカーソルが移っていますので、すぐに書けますね！


コードテンプレートは前方の変数名を取得したりするなど、たくさんの便利機能があります。
ぜひ使ってみてください。

== プロジェクトをGitとして初期化する


バーション管理のためにGitを使います。


まずはプロジェクトをGitのリポジトリとして初期化しましょう。
プロジェクト名を右クリックし、[バーション管理]→[Gitリポジトリの初期化]をポイントします。

//image[2012-11-21-23_40_39][]{
//}


確認が表示されますのでOKを押します。

//image[2012-11-21-23_40_56][]{
//}


下部にメッセージが出て初期化の状況がわかります。すぐに終わります。@<br>{}


コミットします。プロジェクト名を右クリックすると「Git」メニューが増えています。

[Git]→[コミット…]をポイントします。


//image[2012-11-21-23_41_07][]{
//}


確認が表示されます。


//image[2012-11-21-23_41_26][]{
//}


コミット・メッセージには必ず状況説明を記入します。入れないとコミットできません。
下半分はコミットされるファイルの一覧です。


緑色だったファイル名が黒色に戻り、コミットされたことがわかります。


//image[2012-11-21-23_41_39][]{
//}


ちなみにファイル名の色は

 * @<strong>{緑}＝新規追加ファイル
 * @<strong>{青}＝変更され、コミットされていないファイル
 * @<strong>{黒}＝コミット完了のファイル

となっています。

== Bitbucketの準備


次はGitホストを用意します。


今回はGitHubではなくて@<href>{https://bitbucket.org/,Bitbucket}を使用します。Bitbucketは無料でプライベートリポジトリを無制限に作れますので、秘密でお金をかけず作りたい人に向いています。(笑)


まずはBitbucketでアカウントを作成します。Bitbucketはこちら　＞　@<href>{https://bitbucket.org/,https://bitbucket.org/}@<br>{}


ログインしましたら、Repositoriesから「Create repository」を選択します。


//image[2012-12-01_13h20_39][]{
//}


必要な項目を記入します。


//image[2012-11-21-232][]{
//}


「This is a private repository」にチェックを入れますと、自分と許可した人だけが見られるプライベートリポジトリとなります。


「Create repository」を押せばリポジトリが作成されます。


次の操作のために@<strong>{リポジトリURL}を取得します。


//image[2012-12-01_13h42_14][]{
//}


上部にこのようなボタンがあります。
[Clone]を押します。


//image[2012-11-21-23][]{
//}


SSH の部分を押します。


//image[2012-11-21-233][]{
//}


HTTPSを選択します。
すると


//image[2012-11-21-2321][]{
//}


https://　から始まるURLが現れます。
このURLがNetBeansで使えます。
クリップボードにコピー、もしくはメモなどに貼り付けておいてください。

== Bitbucketにプッシュする


Bitbucketプッシュします。


NetBeansに戻り、プロジェクト名を右クリックし、[Git]→[リモート]→[プッシュ…]をポイントします。


//image[2012-11-21-23_43_47][]{
//}


登録するリポジトリの設定画面が出ます。


//image[2012-11-21-231][]{
//}


リポジトリURLが最初は空になっています。
ここに@<strong>{先ほどコピーしたBitbucketのリポジトリURL}を記入します。
ユーザー名、パスワードはBitbucketのログインパスワードと同じです。
[次>]を押します。


//image[2012-11-21-23_44_24][]{
//}


何も考えず「master -> master」にチェックを入れます。


//image[2012-11-21-23_44_32][]{
//}


[終了]を押します。
正常にプッシュされるとBitbucketに反映されます。


//image[2012-11-21-23_45_17][]{
//}


これでプッシュ完了です。

== クローンから再生


次にBitbucketからプロジェクトを読みこんでみます。


プロジェクトが無い状態からはじめます。


//image[2012-11-21-23_49_04][]{
//}


NetBeansの[チーム]→[Git]→[クローン…]をポイントします。


BitbucketのリポジトリURL、パスワードなどを入力し、次へ進みます。


「master」を選択します。


//image[2012-11-21-23_49_25][]{
//}


保存する親ディレクトリ、ディレクトリ名などを設定します。


//image[2012-11-21-23_49_44][]{
//}


正常にクローンされると、プロジェクトを開くかどうかの質問が出ますので、「開く」を選択。


//image[2012-11-21-23_50_46][]{
//}


無事に再生されました。

== まとめ


いかがでしたでしょうか？


だいぶ長くなってしまいました。ここまで読んでくださってありがとうございます。


NetBeansは動作も比較的軽く、サポート機能が充実しています。
また、設定を一括でエクスポート、インポート出来るおかげでWindows、Mac、Linuxで使いやすい環境をすぐに作り上げることができます。
未体験の方はぜひ使ってみてください。

== 明日は


あすは@seltzerさんの「Coda + FuelPHPでお手軽開発環境を作る」です。
おたのしみに！

== P.S.


完全に内容を欲張りすぎましたね…こんな長い記事になってしまってすみません。

//quote{
@<strong>{@LandscapeSketch}


Twitter: @<href>{https://twitter.com/LandscapeSketch,@LandscapeSketch}


Blog: @<href>{http://worktoolsmith.com/,http://worktoolsmith.com/}
//}
